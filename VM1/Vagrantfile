# Automated EC2 Instance VM for Dog museum 
# By Francesca Kraayvanager, with basis code from lab09

# -*- mode: ruby -*-
# vi: set ft=ruby :
class Hash
  def slice(*keep_keys)
    h = {}
    keep_keys.each { |key| h[key] = fetch(key) if has_key?(key) }
    h
  end unless Hash.method_defined?(:slice)
  def except(*less_keys)
    slice(*keys - less_keys)
  end unless Hash.method_defined?(:except)
end

Vagrant.configure("2") do |config|

  config.vm.box = "dummy"

  config.vm.provider :aws do |aws, override|
    
    
    aws.region = "us-east-1"

    
    override.nfs.functional = false
    override.vm.allowed_synced_folder_types = :rsync

    # Keypair was created within the AWS console, and downloaded to the local computers .ssh directory.
    aws.keypair_name = "cosc349-ASSIGN2"
    
    override.ssh.private_key_path = "~/.ssh/cosc349-ASSIGN2.pem"
    # Lessens the cost, less RAM. Perfect for this webserver.
    aws.instance_type = "t2.micro"

    # These Security groups allow for SSH to occur as well as HTTP access.
    aws.security_groups = ["sg-0cb2283b32173cb46", "sg-021c6b5653280b9c6"]

    
    aws.availability_zone = "us-east-1e"
    aws.subnet_id = "subnet-005d9a3787282b2b1"

    
    aws.ami = "ami-0133407e358cc1af0"

    
    override.ssh.username = "ubuntu"
  end
  
  # Provisioning for the VM with the use of apache2.
  # Used the command sudo systemctl start httpd within the ssh VM to start the webserver.
  config.vm.provision "shell", inline: <<-SHELL
     apt-get update
     apt-get install -y apache2 php libapache2-mod-php php-mysql
    a2dissite 000-default
    service apache2 reload
    SHELL
end
